// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Creator {
  id            String @id @default(uuid())
  walletAddress String @unique
  user          User   @relation(fields: [userId], references: [id])
  userId        String @unique
  nftData       NFT[]
}

model Owner {
  id            String @id @default(uuid())
  walletAddress String @unique
  user          User   @relation(fields: [userId], references: [id])
  userId        String @unique
  nftData       NFT[]
}

model User {
  id            String       @id @default(uuid())
  walletAddress String       @unique
  type          TYPE         @default(USER)
  userName      String       @default("usernamed")
  bannerImage   String       @default("https://res.cloudinary.com/dtrrkeb4a/image/upload/v1663911221/Exclusive/Profile/303-3034192_default-banner-banner-jpg_vgzocd.jpg")
  profileImage  String       @default("https://res.cloudinary.com/dtrrkeb4a/image/upload/v1663911221/Exclusive/Profile/303-3034192_default-banner-banner-jpg_vgzocd.jpg")
  creator       Creator?
  owner         Owner?
  Collection    Collection[]
}

model Collection {
  id            String @id @default(uuid())
  user          User   @relation(fields: [userId], references: [id])
  userId        String
  address       String
  name          String @default("usernamed")
  logoImage     String @default("https://res.cloudinary.com/dtrrkeb4a/image/upload/v1664112920/Exclusive/Collection/303-3034192_default-banner-banner-jpg_g9tavj.jpg")
  bannerImage   String @default("https://res.cloudinary.com/dtrrkeb4a/image/upload/v1664112920/Exclusive/Collection/303-3034192_default-banner-banner-jpg_g9tavj.jpg")
  featuredImage String @default("https://res.cloudinary.com/dtrrkeb4a/image/upload/v1664112920/Exclusive/Collection/303-3034192_default-banner-banner-jpg_g9tavj.jpg")
}

model NFT {
  id          String   @id @default(uuid())
  category    String
  collection  String
  creator     Creator  @relation(fields: [creatorId], references: [id])
  owner       Owner    @relation(fields: [ownerId], references: [id])
  creatorId   String
  ownerId     String
  price       String
  tokenID     Int
  uri         String
  signature   String
  sold        Boolean  @default(false)
  description String
  image       String
  name        String
  royality    Int      @default(0)
  listed      Boolean  @default(false) //when we want sell  it this feld become true otherwise this false(after create it) 
  sale_way    String   @default("NONE")
  timestamp   DateTime @default(now())
  isDelete    Boolean  @default(false)
}

enum TYPE {
  ADMIN
  SUPER_ADMIN
  USER
}

enum SALE_WAY {
  NONE
  BID
  FIX
}
